/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |   Z  |  Q  |  W  |  F  |  P  |  B  |                 |  J  |  L   |  U  |  Y  |  P  |  /   |
// | BSPC |  A  |  R  |  S  |  T  |  G  |                 |  M  |  N   |  E  |  I  |  O  | ESC  |
//              |  X  |  C  |  D  |  V  |                 |  K  |  H   |  <  |  >  | 
//                    | ALT | CTRL| SHFT| SPC | | ENT/NAV | i3  |TAB/F3| UTL |

                        bindings = <
 &kp   Z       &kp  Q  &kp  W   &kp  F    &kp  P     &kp  B                      &kp  J    &kp  L     &kp  U    &kp  Y  &kp  SQT &kp SLASH  
 &kp BACKSPACE &kp  A  &kp  R   &kp  S    &kp  T     &kp  G                      &kp  M    &kp  N     &kp  E    &kp  I  &kp  O   &kp ESCAPE
                       &kp  X   &kp  C    &kp  D     &kp  V                      &kp  K    &kp  H     &kp COMMA &kp DOT 
                       &kp LALT &kp LCTRL &kp LSHIFT  &kp SPACE      &lt 1 ENTER  &mo  2    &lt 3 TAB    &mo 4
                        >;
                };

                navigation_layer {
                        bindings = <
 &kp   GRAVE   &kp N1  &kp N2   &kp N3    &kp N4     &kp  N5                  &kp  N6   &kp  N7    &kp  N8   &kp N9     &kp  N0     &kp SLASH  
 &kp DELETE    &kp SQT &kp SEMI &kp LPAR  &kp RPAR   &kp  MINUS               &kp LEFT  &kp  DOWN  &kp  UP   &kp RIGHT  &kp  COLON  &kp ESCAPE
                 &kp BACKSLASH  &kp LBKT  &kp RBKT   &kp  EQUAL               &kp HOME  &kp PG_DN  &kp PG_UP &kp END 
                  &kp LEFT_ALT  &kp LCTRL &kp LSHIFT &kp SPACE            &kp ENTER &mo  2     &kp TAB   &bt BT_CLR
                        >;
                };
                tiling_layer {
                        bindings = <
 &kp LA(LS(R)) &kp LA(N1)    &kp LA(N2)    &kp LA(N3)    &kp LA(N4)     &kp LA(N5)                &kp LA(N6)    &kp LA(N7)    &kp LA(N8) &kp LA(N9)    &kp  LA(N0)   &kp LA(N0)  
 &kp LA(DELETE) &kp LA(SQT)   &kp LA(E)     &kp LA(W)     &kp LA(T)      &kp  LA(P)                &kp LA(LEFT)  &kp  LA(DOWN) &kp LA(UP) &kp LA(RIGHT) &kp LA(COLON) &kp LA(ESCAPE)
                              &kp LA(LS(C)) &kp LA(LS(Q)) &kp LA(ENTER)  &kp LA(LS(N))    &kp LA(LS(H)) &kp C_VOLUME_DOWN  &kp K_VOLUME_UP &none
                  &kp LEFT_ALT  &kp LA(LCTRL) &kp LA(LSHIFT) &kp LA(SPACE)            &kp ENTER &mo  2     &kp TAB   &bt BT_NXT
                        >;
                };
                function_layer {
                        bindings = <
 &kp KP_NUMLOCK &kp F1  &kp F2   &kp F3    &kp F4     &kp  F5                  &kp  F6   &kp  F7    &kp  F8   &kp F9     &kp  F10     &kp PRINTSCREEN  
 &none          &kp F11 &kp F12  &none     &none      &none                    &none     &kp  C_BRI_DN  &kp  C_BRI_UP   &none  &none  &none
                &none   &none    &none     &none                               &none     &kp C_VOLUME_DOWN  &kp K_VOLUME_UP  &none
                  &kp LEFT_ALT  &kp LCTRL &kp LSHIFT  &none                    &to 5     &none              &none            &none
                        >;
                };
                settings_layer {
                        bindings = <
 &none &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5       &none      &none &none   &none       &none        &bt  BT_CLR  
 &none          &none &none  &none     &none      &none                       &bt BT_PRV &none &none   &bt BT_NXT  &none        &none
                &kp C_RESET  &kp K_SLEEP  &none   &none                       &none      &none &none   &none
                &none        &none        &none   &none                       &none      &none &none   &none
                        >;
                };
                onehanded_layer {
                        bindings = <
&none    &none    &none    &none    &none    &none                &kp LA(N1) &kp LA(N2) &kp LA(N3) &kp LA(N4) &kp LA(N5)  &kp LA(N6)    
&none    &none    &none    &none    &none    &none                &kp LEFT  &kp  DOWN  &kp  UP   &kp RIGHT    &kp LA(N7)  &kp LA(N8)
                  &none    &none    &none    &none                &kp HOME  &kp PG_DN  &kp PG_UP &kp END 
                  &none    &none    &none    &none                &kp ENTER &kp LA(LS(H)) &to 0   &none
                        >;
                };
        };
};
